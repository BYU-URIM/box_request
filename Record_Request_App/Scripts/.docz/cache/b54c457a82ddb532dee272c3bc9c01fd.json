{"remainingRequest":"/home/urimdev/Github/box_request/Record_Request_App/Scripts/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/home/urimdev/Github/box_request/Record_Request_App/Scripts/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[],\"cacheDirectory\":true,\"babelrc\":false}!/home/urimdev/Github/box_request/Record_Request_App/Scripts/src/components/BoxList/readme.mdx","dependencies":[{"path":"/home/urimdev/Github/box_request/Record_Request_App/Scripts/src/components/BoxList/readme.mdx","mtime":1546296793800},{"path":"/home/urimdev/Github/box_request/Record_Request_App/Scripts/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1537981783892},{"path":"/home/urimdev/Github/box_request/Record_Request_App/Scripts/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1537981783837}],"contextDependencies":[],"result":["var _jsxFileName = \"/home/urimdev/Github/box_request/Record_Request_App/Scripts/src/components/BoxList/readme.mdx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nimport { BoxList } from \"./BoxList\";\nimport { Playground, PropsTable } from \"docz\";\nexport default (function (_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components,\n    props: {\n      \"id\": \"box-list\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Box List\"), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"component\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Component\"), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"this-component-is-used-to-display-boxes-unique-to-the-selected-department\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"This component is used to display boxes unique to the selected department.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"There is a button in this component that adds boxes to checkout. If a box is already checked out by another department or currently checked out by the user's department, a red box will show up stating that the box is unavailable. If a box is currently in the checkout, a gray box will appear stating that the box is In Checkout. Otherwise, there will be a blue box stating that the box is Available.\"), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"props-interface\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Props Interface\"), React.createElement(PropsTable, {\n    of: BoxList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"boxlist-props-explained\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"BoxList Props Explained\"), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"initializefolderform\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"initializeFolderForm\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-javascript\",\n      \"metaString\": \"\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"const folderForm = () => (uiStore.form = FormTypes.NEW_FOLDER)\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"initializeFolderForm accesses the stores to open a form window where the user can request to create a new a folder or folders. The function needs to return an existing FormType.\"), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"dept\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"dept\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-javascript\",\n      \"metaString\": \"\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"dept={userStore.selectedDepartment}\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"dept is an object created from the Department class. In order for the BoxList componenet to work, it needs to grab the User, and from the user it accesses that user's departments. The department selected from the dropdown menu will then enter the BoxList component as the dept property. The selected department has a list of boxes that will then be displayed in the component. \"));\n});",{"version":3,"sources":["/home/urimdev/Github/box_request/Record_Request_App/Scripts/src/components/BoxList/readme.mdx"],"names":["React","MDXTag","BoxList","Playground","PropsTable","components","props"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { BoxList } from \"./BoxList\"\nimport { Playground, PropsTable } from \"docz\"\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"box-list\"}}>{`Box List`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"component\"}}>{`Component`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"this-component-is-used-to-display-boxes-unique-to-the-selected-department\"}}>{`This component is used to display boxes unique to the selected department.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`There is a button in this component that adds boxes to checkout. If a box is already checked out by another department or currently checked out by the user's department, a red box will show up stating that the box is unavailable. If a box is currently in the checkout, a gray box will appear stating that the box is In Checkout. Otherwise, there will be a blue box stating that the box is Available.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props-interface\"}}>{`Props Interface`}</MDXTag>\n<PropsTable of={BoxList} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"boxlist-props-explained\"}}>{`BoxList Props Explained`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"initializefolderform\"}}>{`initializeFolderForm`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"metaString\":\"\"}}>{`const folderForm = () => (uiStore.form = FormTypes.NEW_FOLDER)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`initializeFolderForm accesses the stores to open a form window where the user can request to create a new a folder or folders. The function needs to return an existing FormType.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"dept\"}}>{`dept`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"metaString\":\"\"}}>{`dept={userStore.selectedDepartment}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`dept is an object created from the Department class. In order for the BoxList componenet to work, it needs to grab the User, and from the user it accesses that user's departments. The department selected from the dropdown menu will then enter the BoxList component as the dept property. The selected department has a list of boxes that will then be displayed in the component. `}</MDXTag></MDXTag>\n  "]}]}