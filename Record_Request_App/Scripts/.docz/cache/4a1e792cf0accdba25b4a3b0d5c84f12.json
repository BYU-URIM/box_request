{"remainingRequest":"C:\\github\\box_request\\Record_Request_App\\Scripts\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[[\"C:\\\\github\\\\box_request\\\\Record_Request_App\\\\Scripts\\\\node_modules\\\\babel-preset-docz\\\\dist\\\\index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[],\"cacheDirectory\":true,\"babelrc\":false}!C:\\github\\box_request\\Record_Request_App\\Scripts\\src\\stores\\CheckoutStore\\readme.mdx","dependencies":[{"path":"C:\\github\\box_request\\Record_Request_App\\Scripts\\src\\stores\\CheckoutStore\\readme.mdx","mtime":1539989313950},{"path":"C:\\github\\box_request\\Record_Request_App\\Scripts\\node_modules\\docz-core\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\github\\box_request\\Record_Request_App\\Scripts\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"C:\\\\github\\\\box_request\\\\Record_Request_App\\\\Scripts\\\\src\\\\stores\\\\CheckoutStore\\\\readme.mdx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nimport { CheckoutStore } from \"./CheckoutStore\";\nimport { Playground, PropsTable } from \"docz\";\nexport default (function (_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components,\n    props: {\n      \"id\": \"checkoutstore\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"CheckoutStore\"), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"store\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Store\"), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"this-store-contains-the-functions-that-run-behind-the-scenes-of-the-checkout-view\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"This store contains the functions that run behind the scenes of the checkout view.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Items in checkout show up here and are ordered based on item ID. These functions can also call the checkout form in addition to submitting items for request in the checkout.\"), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"functions\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Functions\"), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"observable\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Observable\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-javascript\",\n      \"metaString\": \"\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"/* \\nItems are placed into a map object, for ease of working with two different objects--folders and boxes.\\n*/\\nprivate _items: Map<number, CheckoutItem> = observable.map()\\n\")), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"computed\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Computed\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-javascript\",\n      \"metaString\": \"\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"/*\\n    This function sorts the list items by box ID; if item is a folder, it's sorted by its parent box ID.\\n*/\\n    get cart(): Array<CheckoutItem> {\\n        return Array.from(this.items.values()).sort((a, b) => a.BoxId - b.BoxId)\\n    }\\n\\n/*\\n    Returns the folders from the list of items in checkout.\\n*/    \\n\\n    get folders(): Array<Folder> {\\n        return this.cart.filter((_item: CheckoutItem) => {\\n            return _item instanceof Folder\\n        }) as Array<Folder>\\n    }\\n\\n/*\\n    Returns all items in checkout.\\n*/\\n    get items(): Map<number, CheckoutItem> {\\n        return this._items\\n    }\\n/*\\n    Sets the items in checkout.\\n*/\\n    set items(_items: Map<number, CheckoutItem>) {\\n        this._items = _items\\n    }\\n\\n/*\\n    Controls whether or not the cart can be submitted dependent on whether or not there's an item in the cart.\\n*/\\n    get cartIsValid(): boolean {\\n        return this.cart.length > 0\\n    }\\n\")), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"action\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Action\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-javascript\",\n      \"metaString\": \"\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"/*\\n    Clears the map object, removing all items from the cart.\\n*/    \\n    clearCart = () => {\\n        this.items.clear()\\n    }\\n\\n/*\\n    Calls the form for Submit Cart that requests special delivery instructions.\\n*/\\n    initializeRequestForm = (): void => {\\n        this._root.uiStore.form = FormTypes.SUBMIT_CART\\n    }\\n\")), React.createElement(PropsTable, {\n    of: CheckoutStore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n});",{"version":3,"sources":["C:\\github\\box_request\\Record_Request_App\\Scripts\\src\\stores\\CheckoutStore\\readme.mdx"],"names":["React","MDXTag","CheckoutStore","Playground","PropsTable","components","props"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { CheckoutStore } from \"./CheckoutStore\"\nimport { Playground, PropsTable } from \"docz\"\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"checkoutstore\"}}>{`CheckoutStore`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"store\"}}>{`Store`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"this-store-contains-the-functions-that-run-behind-the-scenes-of-the-checkout-view\"}}>{`This store contains the functions that run behind the scenes of the checkout view.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Items in checkout show up here and are ordered based on item ID. These functions can also call the checkout form in addition to submitting items for request in the checkout.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"functions\"}}>{`Functions`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"observable\"}}>{`Observable`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"metaString\":\"\"}}>{`/* \nItems are placed into a map object, for ease of working with two different objects--folders and boxes.\n*/\nprivate _items: Map<number, CheckoutItem> = observable.map()\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"computed\"}}>{`Computed`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"metaString\":\"\"}}>{`/*\n    This function sorts the list items by box ID; if item is a folder, it's sorted by its parent box ID.\n*/\n    get cart(): Array<CheckoutItem> {\n        return Array.from(this.items.values()).sort((a, b) => a.BoxId - b.BoxId)\n    }\n\n/*\n    Returns the folders from the list of items in checkout.\n*/    \n\n    get folders(): Array<Folder> {\n        return this.cart.filter((_item: CheckoutItem) => {\n            return _item instanceof Folder\n        }) as Array<Folder>\n    }\n\n/*\n    Returns all items in checkout.\n*/\n    get items(): Map<number, CheckoutItem> {\n        return this._items\n    }\n/*\n    Sets the items in checkout.\n*/\n    set items(_items: Map<number, CheckoutItem>) {\n        this._items = _items\n    }\n\n/*\n    Controls whether or not the cart can be submitted dependent on whether or not there's an item in the cart.\n*/\n    get cartIsValid(): boolean {\n        return this.cart.length > 0\n    }\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"action\"}}>{`Action`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"metaString\":\"\"}}>{`/*\n    Clears the map object, removing all items from the cart.\n*/    \n    clearCart = () => {\n        this.items.clear()\n    }\n\n/*\n    Calls the form for Submit Cart that requests special delivery instructions.\n*/\n    initializeRequestForm = (): void => {\n        this._root.uiStore.form = FormTypes.SUBMIT_CART\n    }\n`}</MDXTag></MDXTag>\n<PropsTable of={CheckoutStore} /></MDXTag>\n  "]}]}